// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetroShirtDAL.Data;

namespace RetroShirtDAL.Migrations
{
    [DbContext(typeof(RetroShirtDBContext))]
    [Migration("20220420135722_FirstCreate")]
    partial class FirstCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RetroShirtEntities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Top"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Short"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Socks"
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TeamId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Fenerbahce top jersey.",
                            ImageUrl = "https://www.simpleimageresizer.com/_uploads/photos/1b29ced2/1_2_300x300.jpg",
                            Name = "FenerbahceTop",
                            Price = 450.0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Barcelona short.",
                            ImageUrl = "https://www.simpleimageresizer.com/_uploads/photos/1b29ced2/12_300x300.jpeg",
                            Name = "BarcelonaShort",
                            Price = 350.0,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Arsenal socks.",
                            ImageUrl = "https://www.simpleimageresizer.com/_uploads/photos/1b29ced2/13_300x300.jpeg",
                            Name = "ArsenalSocks",
                            Price = 150.0,
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fenerbahce"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Arsenal"
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.Product", b =>
                {
                    b.HasOne("RetroShirtEntities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RetroShirtEntities.Team", "Team")
                        .WithMany("Products")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RetroShirtEntities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("RetroShirtEntities.Team", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
