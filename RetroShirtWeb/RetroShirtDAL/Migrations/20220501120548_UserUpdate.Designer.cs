// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RetroShirtDAL.Data;

namespace RetroShirtDAL.Migrations
{
    [DbContext(typeof(RetroShirtDBContext))]
    [Migration("20220501120548_UserUpdate")]
    partial class UserUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RetroShirtEntities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Top"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Short"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Socks"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Boots"
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.CategoryTeam", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("CategoryTeams");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TeamId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Fenerbahce top jersey.",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "FenerbahceTop",
                            Price = 450.0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Barcelona short.",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "BarcelonaShort",
                            Price = 350.0,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Arsenal socks.",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "ArsenalSocks",
                            Price = 150.0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Fenerbahce short.",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "FenerbahceShort",
                            Price = 100.0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Real Madrid short.",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "RMAShort",
                            Price = 250.0,
                            TeamId = 4
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Barcelona top jersey.",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "BarcelonaTop",
                            Price = 750.0,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Arsenal short.",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "ArsenalShort",
                            Price = 150.0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Description = "BayernMBoots",
                            ImageUrl = "https://www.thedome.org/wp-content/uploads/2019/06/300x300-Placeholder-Image.jpg",
                            IsActive = true,
                            Name = "BayernMBoots",
                            Price = 450.0,
                            TeamId = 5
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            Name = "Fenerbahce"
                        },
                        new
                        {
                            TeamId = 2,
                            Name = "Barcelona"
                        },
                        new
                        {
                            TeamId = 3,
                            Name = "Arsenal"
                        },
                        new
                        {
                            TeamId = 4,
                            Name = "Real Madrid"
                        },
                        new
                        {
                            TeamId = 5,
                            Name = "Bayern Munchen"
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "abc@gmail.com",
                            Fullname = "YuşeKılıç",
                            Password = "abc",
                            Role = "Admin",
                            Username = "abc"
                        },
                        new
                        {
                            Id = 2,
                            Email = "abc@gmail.com",
                            Fullname = "EgeErsoy",
                            Password = "abc",
                            Role = "Editor",
                            Username = "abc"
                        },
                        new
                        {
                            Id = 3,
                            Email = "abc@gmail.com",
                            Fullname = "TürkayÜrkmez",
                            Password = "abc",
                            Role = "Customer",
                            Username = "abc"
                        });
                });

            modelBuilder.Entity("RetroShirtEntities.CategoryTeam", b =>
                {
                    b.HasOne("RetroShirtEntities.Category", "Category")
                        .WithMany("CategoryTeams")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RetroShirtEntities.Team", "Team")
                        .WithMany("CategoryTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RetroShirtEntities.Product", b =>
                {
                    b.HasOne("RetroShirtEntities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RetroShirtEntities.Team", "Team")
                        .WithMany("Products")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("RetroShirtEntities.Category", b =>
                {
                    b.Navigation("CategoryTeams");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("RetroShirtEntities.Team", b =>
                {
                    b.Navigation("CategoryTeams");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
